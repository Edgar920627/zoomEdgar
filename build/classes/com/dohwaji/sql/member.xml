<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Member">


	<!-- 비밀번호 변경 -->
	<update id="newPw" parameterType="memberBean">
		UPDATE Z_MEMBER
		SET USER_PW=#{user_pw}
		WHERE USER_ID=#{user_id} AND user_email = #{user_email} AND user_email_checked = '1'
	</update>


	<!-- 리턴 아이디 -->	
	<select id="getUserID" parameterType="string" resultType="string">
		SELECT user_id FROM Z_MEMBER WHERE user_email = #{user_email}
	</select>
	
	
	<!-- 리턴 이메일 -->	
	<select id="getUserEmail" parameterType="string" resultType="string">
		SELECT user_email FROM Z_MEMBER WHERE user_id = #{user_id}
	</select>

	<!-- 이메일 체크 -->	
	<select id="getUserEmailChecked" parameterType="string" resultType="_int">
		SELECT user_email_checked FROM Z_MEMBER WHERE user_id = #{user_id}
	</select>

	<!-- 이메일 인증 결정-->
	<update id="setUserEmailChecked" parameterType="memberBean">
		UPDATE Z_MEMBER SET 
		user_email_checked = '1', user_email_hash = #{user_email_hash}
		WHERE user_id = #{user_id}
	</update>



	
	<!-- id 로그인기록  카운터 -->
	<select id="loginCnt" parameterType="string" resultType="_int">
		SELECT COUNT(*) FROM Z_LOGIN WHERE user_id = #{user_id}
	</select>

	<!--  
	로그인  [이전] [다음] 10개씩   표시
	로그인 기록
	 -->
	<select id="loginHistory" parameterType="map" resultType="loginBean">
		select @rownum:=@rownum+1 as no,
		 zl.* from z_login zl  
	 	 WHERE user_id = #{user_id} and 
	 		 (@rownum:=0)=0 ORDER BY login_num DESC
			  limit ${startRow}, 10;
	</select>

	
	<!-- 로그인 성공  -->
	<insert id="loginTrue" parameterType="String">
		INSERT INTO Z_LOGIN (
			user_id, login_check, login_ip, login_date
		)
		VALUES(
			#{user_id}, 1, #{login_ip}, NOW()
		)
	</insert>
	
	<!-- 로그인 실패 -->
	<insert id="loginFalse" parameterType="String">
		INSERT INTO Z_LOGIN (
			 user_id, login_check, login_ip, login_date
		)
		VALUES(
			#{user_id}, 0, #{login_ip}, NOW()
		)
	</insert>
	
	
	
	


	<!-- login 기록  삭제  -->
	<delete id="loginDelete" parameterType="String">
		DELETE FROM Z_LOGIN WHERE USER_ID=#{user_id}
	</delete>
	
	
	<!-- 회원 탈퇴 -->
	<delete id="memberdelete" parameterType="String">
		DELETE FROM Z_MEMBER WHERE USER_ID=#{user_id}
	</delete>


	<!-- 회원정보 수정 -->
	<update id="updateuser" parameterType="memberBean">
		UPDATE Z_MEMBER
		SET USER_PW=#{user_pw}, USER_NAME=#{user_name}
		WHERE USER_ID=#{user_id} AND user_email_checked = '1'
	</update>
	
	
	<!-- 회원가입  -->
	<insert id="join" parameterType="memberBean">
		INSERT INTO Z_MEMBER (
			user_id, user_pw, user_name, user_email, user_email_checked, user_date
		)
		VALUES(
			#{user_id}, #{user_pw}, #{user_name}, #{user_email}, 0, NOW()
		)
	</insert>
	
	
	
	
	<!-- 로그인  -->
	<select id="login" parameterType="map" resultType="map">
		SELECT USER_ID FROM Z_MEMBER
		WHERE USER_ID = #{id} AND USER_PW = #{pw} AND user_email_checked = '1'
	</select>
	
	
	<!-- ID 중복 체크  -->
	<select id="checkid" parameterType="String" resultType="_int">
		SELECT COUNT(*) FROM Z_MEMBER WHERE USER_ID = #{id}
	</select>
	
		<!-- name 중복 체크  -->
	<select id="checkName" parameterType="String" resultType="_int">
		SELECT COUNT(*) FROM Z_MEMBER WHERE USER_NAME = #{user_name} AND user_email_checked = '1'
	</select>
	
		<!-- name 데이터  받기 -->
	<select id="nameBring" parameterType="String" resultType="String">
		SELECT USER_NAME FROM Z_MEMBER WHERE USER_ID = #{user_id} AND user_email_checked = '1'
	</select>
	
		<!-- email 중복 체크  -->
	<select id="checkEmail" parameterType="String" resultType="_int">
		SELECT COUNT(*) FROM Z_MEMBER WHERE USER_EMAIL = #{user_email} AND user_email_checked = '1'
	</select>
	
	
	
	<!-- 회원정보 가져오기 -->
	<select id="getMemberDetail" parameterType="String" resultType="memberBean">
		SELECT user_id, user_pw, user_name, user_email, user_date 
		FROM Z_MEMBER 
		WHERE USER_ID=#{user_id}  AND user_email_checked = '1'
	</select>
	
	
	
	
</mapper>










